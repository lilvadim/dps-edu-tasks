import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.jetbrains.kotlin.jvm' version '1.8.21'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.8.21'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.8.21'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-rest:3.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

    implementation 'com.vladmihalcea:hibernate-types-60:2.21.1'

    implementation 'org.postgresql:postgresql'

    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.14.2'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.8.10'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'org.apache.commons:commons-lang3'

    compileOnly 'org.projectlombok:lombok:1.18.26'

    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.0'
}

tasks.withType(KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '17'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
